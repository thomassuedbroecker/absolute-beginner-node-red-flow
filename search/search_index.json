{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 This Node-RED flow is for absolute beginners with minimal Javascript programming knowledge, who plan to participate in Hackathons. Here a 25 min guide and overview on YouTube Questions \u00b6 The documentation guides you to following main topics in Node-RED: How to ... ... save data in a database? ... search for entries in a database? ... display data in a UI? The flowing gif shows the usage of final flow implementation in Node-RED. Motivation \u00b6 The motivation for that example project is: When I support Hackathons I notice there's often a lack of programming knowledge and building UIs. If this is the case, then Node-RED is a perfect starting point to realize a prototype at a hackathon. The dashboard of Node-RED is an awesome way to build a UI, but there was a \"out of the box\" Node missing to simply to add a table . Now I found a very useful Node that\u2019s create a table inside a Node-RED dashboard. That\u2019s motivated me to create this example project, which provides an example to build a simple application from scratch, which contains the main functionalities to insert data, display data in a table and search for values, as you see in the gif below. Estimated time and level \u00b6 Time Level Topic 15 min beginners prerequisites 30 min beginners (option 1) build flow absolute beginner from scratch 10 min beginners (option 2) import existing absolute beginner flow Objectives \u00b6 After the setup of the example should be able to use your Node-RED instance on IBM Cloud to ... save data in a Cloudant database within your Node-RED installation on IBM Cloud ... search for data entries using Cloudant database query ... display data in a UI using Node-RED dashboard and Node-RED UI Table Architecture \u00b6 The following diagram shows the simplified architecture of the example Node-RED application. Prerequisites \u00b6 You should have a ... ... free IBM Cloud Lite Account and upgraded to an PayAsYouGo Account ... running Node-RED instance on IBM Cloud created with a pre-configured Node-RED App. Additional resources \u00b6 Setup Node-RED on IBM Cloud Handle CORS in your Node-RED instance on IBM Cloud REST endpoints, authentication to external API, extract data from API, customize data and CRUD","title":"Introduction"},{"location":"#introduction","text":"This Node-RED flow is for absolute beginners with minimal Javascript programming knowledge, who plan to participate in Hackathons. Here a 25 min guide and overview on YouTube","title":"Introduction"},{"location":"#questions","text":"The documentation guides you to following main topics in Node-RED: How to ... ... save data in a database? ... search for entries in a database? ... display data in a UI? The flowing gif shows the usage of final flow implementation in Node-RED.","title":"Questions"},{"location":"#motivation","text":"The motivation for that example project is: When I support Hackathons I notice there's often a lack of programming knowledge and building UIs. If this is the case, then Node-RED is a perfect starting point to realize a prototype at a hackathon. The dashboard of Node-RED is an awesome way to build a UI, but there was a \"out of the box\" Node missing to simply to add a table . Now I found a very useful Node that\u2019s create a table inside a Node-RED dashboard. That\u2019s motivated me to create this example project, which provides an example to build a simple application from scratch, which contains the main functionalities to insert data, display data in a table and search for values, as you see in the gif below.","title":"Motivation"},{"location":"#estimated-time-and-level","text":"Time Level Topic 15 min beginners prerequisites 30 min beginners (option 1) build flow absolute beginner from scratch 10 min beginners (option 2) import existing absolute beginner flow","title":"Estimated time and level"},{"location":"#objectives","text":"After the setup of the example should be able to use your Node-RED instance on IBM Cloud to ... save data in a Cloudant database within your Node-RED installation on IBM Cloud ... search for data entries using Cloudant database query ... display data in a UI using Node-RED dashboard and Node-RED UI Table","title":"Objectives"},{"location":"#architecture","text":"The following diagram shows the simplified architecture of the example Node-RED application.","title":"Architecture"},{"location":"#prerequisites","text":"You should have a ... ... free IBM Cloud Lite Account and upgraded to an PayAsYouGo Account ... running Node-RED instance on IBM Cloud created with a pre-configured Node-RED App.","title":"Prerequisites"},{"location":"#additional-resources","text":"Setup Node-RED on IBM Cloud Handle CORS in your Node-RED instance on IBM Cloud REST endpoints, authentication to external API, extract data from API, customize data and CRUD","title":"Additional resources"},{"location":"import/0-install-nodes/","text":"Install dashboard and table \u00b6 The much faster way to setup the flow is just to import the and configure the nodes, if needed. To ensure that we won't have missing node types in our Node-RED instance, we need to install the Node-RED dashboard and Node-RED UI Table . Step 1: Install the Node-RED dashboard and Node-RED UI Table \u00b6 Open Manage palette Select the install tab, insert node-red-dashboard and press install Repeat it for the node-red-node-ui-table .","title":"Setup dashbord"},{"location":"import/0-install-nodes/#install-dashboard-and-table","text":"The much faster way to setup the flow is just to import the and configure the nodes, if needed. To ensure that we won't have missing node types in our Node-RED instance, we need to install the Node-RED dashboard and Node-RED UI Table .","title":"Install dashboard and table"},{"location":"import/0-install-nodes/#step-1-install-the-node-red-dashboard-and-node-red-ui-table","text":"Open Manage palette Select the install tab, insert node-red-dashboard and press install Repeat it for the node-red-node-ui-table .","title":"Step 1: Install the Node-RED dashboard and Node-RED UI Table"},{"location":"import/1-import/","text":"Import existing Node-RED flow \u00b6 Step 1: Copy the content of the file node-red-flow/basic-flow-flow.json in the GitHub repository. \u00b6 Step 2: Select Import in Node-RED \u00b6 Step 3: Past the copied content and press Import \u00b6","title":"Import flow"},{"location":"import/1-import/#import-existing-node-red-flow","text":"","title":"Import existing Node-RED flow"},{"location":"import/1-import/#step-1-copy-the-content-of-the-file-node-red-flowbasic-flow-flowjson-in-the-github-repository","text":"","title":"Step 1: Copy the content of the file node-red-flow/basic-flow-flow.json in the GitHub repository."},{"location":"import/1-import/#step-2-select-import-in-node-red","text":"","title":"Step 2: Select Import in Node-RED"},{"location":"import/1-import/#step-3-past-the-copied-content-and-press-import","text":"","title":"Step 3: Past the copied content and press Import"},{"location":"import/2-configure-cloudant/","text":"To search for data entries in our Cloudant database, we need to create a design document to define a search index , that search index we will use later in our queries. Then we will create five additional nodes in our flow. Three inject Two cloudant in One debug The image shows the five wired nodes. Note: We need to ensure that we saved the data in the database in the right JSON format, when we going to use our queries. { \"user\" : { \"firstname\" : \"Thomas\" , \"lastname\" : \"Suedbroecker\" , \"country\" : \"Germany\" } } Configure a search index \u00b6 We need to create a design document to define a search index , that we will use later in our queries. Here are the parameters for our queries: theFirstname theLastname theCountry Example usage of a query theLastname:S* : Step 1: Open the Cloudant the created database absolute-beginner \u00b6 Step 2: Create a new design document just by press Create document \u00b6 Step 3: Insert following JSON to create the needed design document \u00b6 { \"_id\" : \"_design/_d_searchindex\" , \"views\" : {}, \"language\" : \"javascript\" , \"indexes\" : { \"_searchindex\" : { \"analyzer\" : \"standard\" , \"index\" : \"function (doc) {\\n index(\\\"default\\\", doc._id);\\n\\n if(doc.user.firstname){\\n index(\\\"theFirstname\\\", doc.user.firstname, {\\\"store\\\": true, \\\"facet\\\":true});\\n }\\n if(doc.user.lastname){\\n index(\\\"theLastname\\\", doc.user.lastname, {\\\"store\\\": true, \\\"facet\\\":true });\\n }\\n if(doc.user.country){\\n index(\\\"theCountry\\\", doc.user.country, {\\\"store\\\": true, \\\"facet\\\":true});\\n }\\n}\" } } } The image shows the new design document. Step 4: Open the search index _searchindex and insert in query \"theFirstname:T*\", then press query \u00b6 Step 5: Now you should be able to use the flow and the UI. \u00b6","title":"Configure Cloudant search"},{"location":"import/2-configure-cloudant/#configure-a-search-index","text":"We need to create a design document to define a search index , that we will use later in our queries. Here are the parameters for our queries: theFirstname theLastname theCountry Example usage of a query theLastname:S* :","title":"Configure a search index"},{"location":"import/2-configure-cloudant/#step-1-open-the-cloudant-the-created-database-absolute-beginner","text":"","title":"Step 1: Open the Cloudant the created database absolute-beginner"},{"location":"import/2-configure-cloudant/#step-2-create-a-new-design-document-just-by-press-create-document","text":"","title":"Step 2: Create a new design document just by press Create document"},{"location":"import/2-configure-cloudant/#step-3-insert-following-json-to-create-the-needed-design-document","text":"{ \"_id\" : \"_design/_d_searchindex\" , \"views\" : {}, \"language\" : \"javascript\" , \"indexes\" : { \"_searchindex\" : { \"analyzer\" : \"standard\" , \"index\" : \"function (doc) {\\n index(\\\"default\\\", doc._id);\\n\\n if(doc.user.firstname){\\n index(\\\"theFirstname\\\", doc.user.firstname, {\\\"store\\\": true, \\\"facet\\\":true});\\n }\\n if(doc.user.lastname){\\n index(\\\"theLastname\\\", doc.user.lastname, {\\\"store\\\": true, \\\"facet\\\":true });\\n }\\n if(doc.user.country){\\n index(\\\"theCountry\\\", doc.user.country, {\\\"store\\\": true, \\\"facet\\\":true});\\n }\\n}\" } } } The image shows the new design document.","title":"Step 3: Insert following JSON to create the needed design document"},{"location":"import/2-configure-cloudant/#step-4-open-the-search-index-_searchindex-and-insert-in-query-thefirstnamet-then-press-query","text":"","title":"Step 4: Open the search index _searchindex and insert in query \"theFirstname:T*\", then press query"},{"location":"import/2-configure-cloudant/#step-5-now-you-should-be-able-to-use-the-flow-and-the-ui","text":"","title":"Step 5: Now you should be able to use the flow and the UI."},{"location":"prerequisites/prerequisites/","text":"Setup prerequisites \u00b6 Step 1: Follow this link and first setup an IBM Cloud Lite account and upgrade to a PayAsYouGo account. \u00b6 (This doesn't work anymore!) Step 2: To setup the pre-configured Node-RED App just follow the steps in this YouVideo for Cloud Foundry: \u00b6 Step 3: To setup the pre-configured Node-RED App just follow the steps in this YouVideo for Code Engine (including a free tier on IBM Cloud): \u00b6 Step 3: To setup the pre-configured Node-RED App just follow the steps in this YouVideo for free Kubernetes Cluster on IBM Cloud: (my preference ;-)) \u00b6","title":"Setup prerequisites"},{"location":"prerequisites/prerequisites/#setup-prerequisites","text":"","title":"Setup prerequisites"},{"location":"prerequisites/prerequisites/#step-1-follow-this-link-and-first-setup-an-ibm-cloud-lite-account-and-upgrade-to-a-payasyougo-account","text":"","title":"Step 1: Follow this link and first setup an IBM Cloud Lite account and upgrade to a PayAsYouGo account."},{"location":"prerequisites/prerequisites/#this-doesnt-work-anymore-step-2-to-setup-the-pre-configured-node-red-app-just-follow-the-steps-in-this-youvideo-for-cloud-foundry","text":"","title":"(This doesn't work anymore!) Step 2: To setup the pre-configured Node-RED App just follow the steps in this YouVideo for Cloud Foundry:"},{"location":"prerequisites/prerequisites/#step-3-to-setup-the-pre-configured-node-red-app-just-follow-the-steps-in-this-youvideo-for-code-engine-including-a-free-tier-on-ibm-cloud","text":"","title":"Step 3: To setup the pre-configured Node-RED App just follow the steps in this YouVideo for Code Engine (including a free tier on IBM Cloud):"},{"location":"prerequisites/prerequisites/#step-3-to-setup-the-pre-configured-node-red-app-just-follow-the-steps-in-this-youvideo-for-free-kubernetes-cluster-on-ibm-cloud-my-preference-","text":"","title":"Step 3: To setup the pre-configured Node-RED App just follow the steps in this YouVideo for free Kubernetes Cluster on IBM Cloud: (my preference ;-))"},{"location":"steps/1-create-data/","text":"Create data entries YouTube (2:40) \u00b6 In this part we create an inject and a cloudant out node. Background : In our situation we will use Node-RED on IBM Cloud with and Cloudant service instance, which contains a database to save the flows and more for our Node-RED instance. We use Cloud Foundry as our runtime for the Node-RED instance and with the existing Cloudant service binding, we easily can reuse our existing Cloudant service to create an absolute beginner database with a cloudant out node. The image below shows the dependencies of application , binding and database service . Step 1: Configure the inject node to create a JSON value \u00b6 Step 2: Insert into the inject node following JSON \u00b6 { \"user\" : { \"firstname\" : \"Thomas\" , \"lastname\" : \"Suedbroecker\" , \"country\" : \"Germany\" } } Step 3: Open a new browser tap and login to your IBM Cloud account \u00b6 Step 4: In the dashboard select `App \u00b6 Step 5: Now press on your Node-RED App you created in the last video \u00b6 Step 6: Select in the App Cloudant->Open Dashboard \u00b6 Step 6: In the Cloudant database service press Launch Dashboard \u00b6 Step 7: Now you can see the existing database nodered \u00b6 Later we will find here our absolute-beginner database Step 8: Add a cloudant out node and give the database the name: absolute beginner \u00b6 Step 9: In the cloudant in node, verify you have selected Only store msg.payload object? \u00b6 Step 10: Select Open dashboard for your Cloudant service in our existing Node-RED app \u00b6 Step 11: Now press Launch dashboard \u00b6 Step 12: Verify in your existing Cloudant service instance, that you don't have a absolute beginner database \u00b6 Step 13: Press data input and verify in your existing Cloudant service was created a new database called absolute beginner \u00b6 Step 14: Press deploy \u00b6","title":"Create data entries"},{"location":"steps/1-create-data/#create-data-entries-youtube-240","text":"In this part we create an inject and a cloudant out node. Background : In our situation we will use Node-RED on IBM Cloud with and Cloudant service instance, which contains a database to save the flows and more for our Node-RED instance. We use Cloud Foundry as our runtime for the Node-RED instance and with the existing Cloudant service binding, we easily can reuse our existing Cloudant service to create an absolute beginner database with a cloudant out node. The image below shows the dependencies of application , binding and database service .","title":"Create data entries YouTube (2:40)"},{"location":"steps/1-create-data/#step-1-configure-the-inject-node-to-create-a-json-value","text":"","title":"Step 1: Configure the inject node to create a JSON value"},{"location":"steps/1-create-data/#step-2-insert-into-the-inject-node-following-json","text":"{ \"user\" : { \"firstname\" : \"Thomas\" , \"lastname\" : \"Suedbroecker\" , \"country\" : \"Germany\" } }","title":"Step 2: Insert into the inject node following JSON"},{"location":"steps/1-create-data/#step-3-open-a-new-browser-tap-and-login-to-your-ibm-cloud-account","text":"","title":"Step 3: Open a new browser tap and login to your IBM Cloud account"},{"location":"steps/1-create-data/#step-4-in-the-dashboard-select-app","text":"","title":"Step 4: In the dashboard select `App"},{"location":"steps/1-create-data/#step-5-now-press-on-your-node-red-app-you-created-in-the-last-video","text":"","title":"Step 5: Now press on your Node-RED App you created in the last video"},{"location":"steps/1-create-data/#step-6-select-in-the-app-cloudant-open-dashboard","text":"","title":"Step 6: Select in the App Cloudant-&gt;Open Dashboard"},{"location":"steps/1-create-data/#step-6-in-the-cloudant-database-service-press-launch-dashboard","text":"","title":"Step 6: In the Cloudant database service press Launch Dashboard"},{"location":"steps/1-create-data/#step-7-now-you-can-see-the-existing-database-nodered","text":"Later we will find here our absolute-beginner database","title":"Step 7: Now you can see the existing database nodered"},{"location":"steps/1-create-data/#step-8-add-a-cloudant-out-node-and-give-the-database-the-name-absolute-beginner","text":"","title":"Step 8: Add a cloudant out node and give the database the name: absolute beginner"},{"location":"steps/1-create-data/#step-9-in-the-cloudant-in-node-verify-you-have-selected-only-store-msgpayload-object","text":"","title":"Step 9: In the cloudant in node, verify you have selected Only store msg.payload object?"},{"location":"steps/1-create-data/#step-10-select-open-dashboard-for-your-cloudant-service-in-our-existing-node-red-app","text":"","title":"Step 10: Select Open dashboard for your Cloudant service in our existing Node-RED app"},{"location":"steps/1-create-data/#step-11-now-press-launch-dashboard","text":"","title":"Step 11: Now press Launch dashboard"},{"location":"steps/1-create-data/#step-12-verify-in-your-existing-cloudant-service-instance-that-you-dont-have-a-absolute-beginner-database","text":"","title":"Step 12: Verify in your existing Cloudant service instance, that you don't have a absolute beginner database"},{"location":"steps/1-create-data/#step-13-press-data-input-and-verify-in-your-existing-cloudant-service-was-created-a-new-database-called-absolute-beginner","text":"","title":"Step 13: Press data input and verify in your existing Cloudant service was created a new database called absolute beginner"},{"location":"steps/1-create-data/#step-14-press-deploy","text":"","title":"Step 14: Press deploy"},{"location":"steps/2-get-data.md/","text":"Get data entries YouTube (5:54) \u00b6 Now we will load all existing data entries from our Cloudant database. We will use a simple configuration. Step 1: Add a inject , a cloudant in and a debug node to the flow \u00b6 Step 2: Wire the nodes and configure the cloudant in node \u00b6 Database: absolute-beginner Search by: all documents Step 3: Press deploy \u00b6 Step 4: Press the newly created inject node and watch the output in the debug tab \u00b6","title":"Get data entries"},{"location":"steps/2-get-data.md/#get-data-entries-youtube-554","text":"Now we will load all existing data entries from our Cloudant database. We will use a simple configuration.","title":"Get data entries YouTube (5:54)"},{"location":"steps/2-get-data.md/#step-1-add-a-inject-a-cloudant-in-and-a-debug-node-to-the-flow","text":"","title":"Step 1: Add a inject,  a cloudant in and a debug node to the flow"},{"location":"steps/2-get-data.md/#step-2-wire-the-nodes-and-configure-the-cloudant-in-node","text":"Database: absolute-beginner Search by: all documents","title":"Step 2: Wire the nodes and configure the cloudant in node"},{"location":"steps/2-get-data.md/#step-3-press-deploy","text":"","title":"Step 3: Press deploy"},{"location":"steps/2-get-data.md/#step-4-press-the-newly-created-inject-node-and-watch-the-output-in-the-debug-tab","text":"","title":"Step 4: Press the newly created inject node and watch the output in the debug tab"},{"location":"steps/3-search-data-entries/","text":"Search for the entries YouTube 6:59 \u00b6 To search for data entries in our Cloudant database, we need to create a design document to define a search index , that search index we will use later in our queries. Then we will create five additional nodes in our flow. Three inject Two cloudant in One debug The image shows the five wired nodes. Note: We need to ensure that we saved the data in the database in the right JSON format, when we going to use our queries. { \"user\" : { \"firstname\" : \"Thomas\" , \"lastname\" : \"Suedbroecker\" , \"country\" : \"Germany\" } } Configure a search index \u00b6 We need to create a design document to define a search index , that we will use later in our queries. Here are the parameters for our queries: theFirstname theLastname theCountry Example usage of a query theLastname:S* : Step 1: Open the Cloudant the created database absolute-beginner \u00b6 Step 2: Create a new design document just by press Create document \u00b6 Step 3: Insert following JSON to create the needed design document \u00b6 Design document name: _d_searchindex Index name: _searchindex { \"_id\" : \"_design/_d_searchindex\" , \"views\" : {}, \"language\" : \"javascript\" , \"indexes\" : { \"_searchindex\" : { \"analyzer\" : \"standard\" , \"index\" : \"function (doc) {\\n index(\\\"default\\\", doc._id);\\n\\n if(doc.user.firstname){\\n index(\\\"theFirstname\\\", doc.user.firstname, {\\\"store\\\": true, \\\"facet\\\":true});\\n }\\n if(doc.user.lastname){\\n index(\\\"theLastname\\\", doc.user.lastname, {\\\"store\\\": true, \\\"facet\\\":true });\\n }\\n if(doc.user.country){\\n index(\\\"theCountry\\\", doc.user.country, {\\\"store\\\": true, \\\"facet\\\":true});\\n }\\n}\" } } } The image shows the new design document. Step 4: Open the search index _searchindex and insert in query \"theFirstname:T*\", then press query \u00b6 Step 5: Configure the three inject nodes \u00b6 Search for Firstname { \"theFirstname\" : \"T*\" , \"limit\" : \"200\" } Search for Lastname { \"theLastname\" : \"S*\" , \"limit\" : \"200\" } Search for Country { \"theContry\" : \"G*\" , \"limit\" : \"200\" } Step 6: Configure the new cloudant in node \u00b6 Database name: absolute-beginner Search by: search index Design document name: _d_searchindex Index name: _searchindex Step 7: Press Deploy \u00b6","title":"Search for entries"},{"location":"steps/3-search-data-entries/#search-for-the-entries-youtube-659","text":"To search for data entries in our Cloudant database, we need to create a design document to define a search index , that search index we will use later in our queries. Then we will create five additional nodes in our flow. Three inject Two cloudant in One debug The image shows the five wired nodes. Note: We need to ensure that we saved the data in the database in the right JSON format, when we going to use our queries. { \"user\" : { \"firstname\" : \"Thomas\" , \"lastname\" : \"Suedbroecker\" , \"country\" : \"Germany\" } }","title":"Search for the entries YouTube 6:59"},{"location":"steps/3-search-data-entries/#configure-a-search-index","text":"We need to create a design document to define a search index , that we will use later in our queries. Here are the parameters for our queries: theFirstname theLastname theCountry Example usage of a query theLastname:S* :","title":"Configure a search index"},{"location":"steps/3-search-data-entries/#step-1-open-the-cloudant-the-created-database-absolute-beginner","text":"","title":"Step 1: Open the Cloudant the created database absolute-beginner"},{"location":"steps/3-search-data-entries/#step-2-create-a-new-design-document-just-by-press-create-document","text":"","title":"Step 2: Create a new design document just by press Create document"},{"location":"steps/3-search-data-entries/#step-3-insert-following-json-to-create-the-needed-design-document","text":"Design document name: _d_searchindex Index name: _searchindex { \"_id\" : \"_design/_d_searchindex\" , \"views\" : {}, \"language\" : \"javascript\" , \"indexes\" : { \"_searchindex\" : { \"analyzer\" : \"standard\" , \"index\" : \"function (doc) {\\n index(\\\"default\\\", doc._id);\\n\\n if(doc.user.firstname){\\n index(\\\"theFirstname\\\", doc.user.firstname, {\\\"store\\\": true, \\\"facet\\\":true});\\n }\\n if(doc.user.lastname){\\n index(\\\"theLastname\\\", doc.user.lastname, {\\\"store\\\": true, \\\"facet\\\":true });\\n }\\n if(doc.user.country){\\n index(\\\"theCountry\\\", doc.user.country, {\\\"store\\\": true, \\\"facet\\\":true});\\n }\\n}\" } } } The image shows the new design document.","title":"Step 3: Insert following JSON to create the needed design document"},{"location":"steps/3-search-data-entries/#step-4-open-the-search-index-_searchindex-and-insert-in-query-thefirstnamet-then-press-query","text":"","title":"Step 4: Open the search index _searchindex and insert in query \"theFirstname:T*\", then press query"},{"location":"steps/3-search-data-entries/#step-5-configure-the-three-inject-nodes","text":"Search for Firstname { \"theFirstname\" : \"T*\" , \"limit\" : \"200\" } Search for Lastname { \"theLastname\" : \"S*\" , \"limit\" : \"200\" } Search for Country { \"theContry\" : \"G*\" , \"limit\" : \"200\" }","title":"Step 5: Configure the three inject nodes"},{"location":"steps/3-search-data-entries/#step-6-configure-the-new-cloudant-in-node","text":"Database name: absolute-beginner Search by: search index Design document name: _d_searchindex Index name: _searchindex","title":"Step 6: Configure the new cloudant in node"},{"location":"steps/3-search-data-entries/#step-7-press-deploy","text":"","title":"Step 7: Press Deploy"},{"location":"steps/4-setup-UI/","text":"Setup the dashboard UI (YouTube 10:01) \u00b6 To setup a UI in Node-RED we use the Node-RED dashboard and Node-RED UI Table . The Node-RED dashboard uses Tab , Group and Node element to structure and organize the UI Node elements for the UI frontend. In the pricture below we see the dependencies. Step 1: Install the Node-RED dashboard and Node-RED UI Table \u00b6 Open Manage palette Select the install tab, insert node-red-dashboard and press install Insert node-red-node-ui-table and press install","title":"Setup dashboard UI"},{"location":"steps/4-setup-UI/#setup-the-dashboard-ui-youtube-1001","text":"To setup a UI in Node-RED we use the Node-RED dashboard and Node-RED UI Table . The Node-RED dashboard uses Tab , Group and Node element to structure and organize the UI Node elements for the UI frontend. In the pricture below we see the dependencies.","title":"Setup the dashboard UI (YouTube 10:01)"},{"location":"steps/4-setup-UI/#step-1-install-the-node-red-dashboard-and-node-red-ui-table","text":"Open Manage palette Select the install tab, insert node-red-dashboard and press install Insert node-red-node-ui-table and press install","title":"Step 1: Install the Node-RED dashboard and Node-RED UI Table"},{"location":"steps/5-add-input-form/","text":"Add a input form to the UI (YouTube 12:10) \u00b6 The image contains the form , function and debug node, we will create. Step 1: Configure the UI input form \u00b6 Step 2: Configure the UI input form \u00b6 Remember the structure of the UI elements. Add a group with the name user Add a tab with the name Home and press add Press add Give the UI from a name Insert a new User and add the input fields for firstname, lastname and country Add a function node and insert following code and wire the nodes The code ensures that the data will be save in the right JSON format we need. var data = {}; data . user = msg . payload ; msg . payload = data ; return msg ; Press `Deploy Step 7: Open in a new browser tab https://[your-host]/ui/ \u00b6 Example URL: `https://node-red-example.mybluemix.net/ui/ Step 8: Insert a name and press SUBMIT \u00b6 Step 9: Now wire the function as input for the database \u00b6 Step 10:Press Deploy \u00b6","title":"Add input form"},{"location":"steps/5-add-input-form/#add-a-input-form-to-the-ui-youtube-1210","text":"The image contains the form , function and debug node, we will create.","title":"Add a input form to the UI (YouTube 12:10)"},{"location":"steps/5-add-input-form/#step-1-configure-the-ui-input-form","text":"","title":"Step 1: Configure the UI input form"},{"location":"steps/5-add-input-form/#step-2-configure-the-ui-input-form","text":"Remember the structure of the UI elements. Add a group with the name user Add a tab with the name Home and press add Press add Give the UI from a name Insert a new User and add the input fields for firstname, lastname and country Add a function node and insert following code and wire the nodes The code ensures that the data will be save in the right JSON format we need. var data = {}; data . user = msg . payload ; msg . payload = data ; return msg ; Press `Deploy","title":"Step 2: Configure the UI input form"},{"location":"steps/5-add-input-form/#step-7-open-in-a-new-browser-tab-httpsyour-hostui","text":"Example URL: `https://node-red-example.mybluemix.net/ui/","title":"Step 7: Open in a new browser tab https://[your-host]/ui/"},{"location":"steps/5-add-input-form/#step-8-insert-a-name-and-press-submit","text":"","title":"Step 8: Insert a name and press SUBMIT"},{"location":"steps/5-add-input-form/#step-9-now-wire-the-function-as-input-for-the-database","text":"","title":"Step 9: Now wire the function as input for the database"},{"location":"steps/5-add-input-form/#step-10press-deploy","text":"","title":"Step 10:Press Deploy"},{"location":"steps/6-add-table-to-ui/","text":"Add table to the UI (YouTube 15:59) \u00b6 In this table we will display our data from the database. Step 1: Add UI table and function node to the flow \u00b6 Insert in the function node and insert following code if ( msg . payload . errors !== undefined ){ if ( msg . payload . errors [ 0 ] !== undefined ){ // do nothing } } else { var userstemp = []; userstemp = msg . payload ; var users = []; count = userstemp . length ; var user = {}; for ( var i = 0 ; i < count ; i ++ ){ if ( userstemp [ i ] !== undefined ) { user . firstname = userstemp [ i ]. user . firstname ; user . lastname = userstemp [ i ]. user . lastname ; user . country = userstemp [ i ]. user . country ; users . push ( user ); user = {}; } else { i = count ; } } msg . payload = users ; } return msg ; Step 2: Configure the table UI \u00b6 Group: Table Properties: firstname , lastname and country . Titles: Firstname , Lastname and Country . Step 3: Press deploy \u00b6","title":"Add table"},{"location":"steps/6-add-table-to-ui/#add-table-to-the-ui-youtube-1559","text":"In this table we will display our data from the database.","title":"Add  table to the UI (YouTube 15:59)"},{"location":"steps/6-add-table-to-ui/#step-1-add-ui-table-and-function-node-to-the-flow","text":"Insert in the function node and insert following code if ( msg . payload . errors !== undefined ){ if ( msg . payload . errors [ 0 ] !== undefined ){ // do nothing } } else { var userstemp = []; userstemp = msg . payload ; var users = []; count = userstemp . length ; var user = {}; for ( var i = 0 ; i < count ; i ++ ){ if ( userstemp [ i ] !== undefined ) { user . firstname = userstemp [ i ]. user . firstname ; user . lastname = userstemp [ i ]. user . lastname ; user . country = userstemp [ i ]. user . country ; users . push ( user ); user = {}; } else { i = count ; } } msg . payload = users ; } return msg ;","title":"Step 1: Add UI table and function node to the flow"},{"location":"steps/6-add-table-to-ui/#step-2-configure-the-table-ui","text":"Group: Table Properties: firstname , lastname and country . Titles: Firstname , Lastname and Country .","title":"Step 2: Configure the table UI"},{"location":"steps/6-add-table-to-ui/#step-3-press-deploy","text":"","title":"Step 3: Press deploy"},{"location":"steps/7-add-search-to-ui/","text":"Add a example search to the UI (YouTube 18:43) \u00b6 Here we will enter search string for our lastname. Step 1: Add a UI form and function Node to the flow \u00b6 Insert in the function node and insert following code var data = {}; data . theLastname = msg . payload . lastname ; data . limit = \"200\" ; msg . payload = data ; return msg ; Step 2: Configure the UI form \u00b6 Group: User Label: Lastname Name: lastname Step 3: Press deploy \u00b6 Congrats , if you got this far you are ready to use your mini application in the internet!","title":"Add example search"},{"location":"steps/7-add-search-to-ui/#add-a-example-search-to-the-ui-youtube-1843","text":"Here we will enter search string for our lastname.","title":"Add a example search to the UI (YouTube 18:43)"},{"location":"steps/7-add-search-to-ui/#step-1-add-a-ui-form-and-function-node-to-the-flow","text":"Insert in the function node and insert following code var data = {}; data . theLastname = msg . payload . lastname ; data . limit = \"200\" ; msg . payload = data ; return msg ;","title":"Step 1: Add a UI form and function Node to the flow"},{"location":"steps/7-add-search-to-ui/#step-2-configure-the-ui-form","text":"Group: User Label: Lastname Name: lastname","title":"Step 2: Configure the UI form"},{"location":"steps/7-add-search-to-ui/#step-3-press-deploy","text":"Congrats , if you got this far you are ready to use your mini application in the internet!","title":"Step 3: Press deploy"},{"location":"steps/8-export/","text":"Export the flow \u00b6 Here is a simple way to export your flow. Step 1: Select from the burger menu export \u00b6 Step 2: Select all flows , formated and Copy to clipboard \u00b6 Step 3: Now you able to save the content in a file or just reuse it in a other Node-RED instance. \u00b6","title":"Export flow"},{"location":"steps/8-export/#export-the-flow","text":"Here is a simple way to export your flow.","title":"Export the flow"},{"location":"steps/8-export/#step-1-select-from-the-burger-menu-export","text":"","title":"Step 1: Select from the burger menu export"},{"location":"steps/8-export/#step-2-select-all-flows-formated-and-copy-to-clipboard","text":"","title":"Step 2: Select all flows, formated and Copy to clipboard"},{"location":"steps/8-export/#step-3-now-you-able-to-save-the-content-in-a-file-or-just-reuse-it-in-a-other-node-red-instance","text":"","title":"Step 3: Now you able to save the content in a file or just reuse it in a other Node-RED instance."},{"location":"tips/tips/","text":"Tips \u00b6 In case something doesn\u2019t work as it should, check out following tips. Tip 01: Ensure you're logged on to your Node-RED flow \u00b6 Tip 02: Ensure you have wired your node output to a debug node and watch the output \u00b6 Tip 03: Ensure you have deployed your changes to the flow \u00b6 Tip 04: When you imported the example node-red-flow/basic-flow.json in your Node-RED instance \u00b6 Ensure you configured the search index for the absolute-beginner database Ensure you selected Tip 05: Get an overview of your UI structure \u00b6 Tip 06: If you can't install the dashboard \u00b6 If you can't install the Node-RED dashboard and Node-RED UI Table . a) First you should verify that you use for the Cloud Foundry instance a memory size of 256 MB. (Thanks for feedback \u041b\u044e\u0434\u043c\u0438\u043b\u0430 \u0412\u043e\u043b\u043e\u0449\u0443\u043a to the video ) b) Then it's mostly related to that your Node-RED version is outdated or related packages are outdated. The easiest way is to uninstall the Node-RED App and setup Node-RED App again. Understand the dependencies of the Node-RED App setup in IBM Cloud by reading this blog post . The new in 2021 setup on IBM Cloud with the Tekton toolchain for the starter kit, you should follow this sequence to fully delete the Node-RED app. Only if have running only the Node-RED app in your IBM Cloud instance. The 3 GitHub projects (just to save your not needed storage) The Toolchain The Cloudant alias The Cloudant service (don't delete, if you using this service also in other applications) The Continuous Delivery service (don't delete, if you using this service also in other toolchains) The Cloud Foundry app (don't forget to delete the routes you used)","title":"Tips"},{"location":"tips/tips/#tips","text":"In case something doesn\u2019t work as it should, check out following tips.","title":"Tips"},{"location":"tips/tips/#tip-01-ensure-youre-logged-on-to-your-node-red-flow","text":"","title":"Tip 01: Ensure you're logged on to your Node-RED flow"},{"location":"tips/tips/#tip-02-ensure-you-have-wired-your-node-output-to-a-debug-node-and-watch-the-output","text":"","title":"Tip 02: Ensure you have wired your node output to a debug node and watch the output"},{"location":"tips/tips/#tip-03-ensure-you-have-deployed-your-changes-to-the-flow","text":"","title":"Tip 03: Ensure you have deployed your changes to the flow"},{"location":"tips/tips/#tip-04-when-you-imported-the-example-node-red-flowbasic-flowjson-in-your-node-red-instance","text":"Ensure you configured the search index for the absolute-beginner database Ensure you selected","title":"Tip 04: When you imported the example node-red-flow/basic-flow.json in your Node-RED instance"},{"location":"tips/tips/#tip-05-get-an-overview-of-your-ui-structure","text":"","title":"Tip 05: Get an overview of your UI structure"},{"location":"tips/tips/#tip-06-if-you-cant-install-the-dashboard","text":"If you can't install the Node-RED dashboard and Node-RED UI Table . a) First you should verify that you use for the Cloud Foundry instance a memory size of 256 MB. (Thanks for feedback \u041b\u044e\u0434\u043c\u0438\u043b\u0430 \u0412\u043e\u043b\u043e\u0449\u0443\u043a to the video ) b) Then it's mostly related to that your Node-RED version is outdated or related packages are outdated. The easiest way is to uninstall the Node-RED App and setup Node-RED App again. Understand the dependencies of the Node-RED App setup in IBM Cloud by reading this blog post . The new in 2021 setup on IBM Cloud with the Tekton toolchain for the starter kit, you should follow this sequence to fully delete the Node-RED app. Only if have running only the Node-RED app in your IBM Cloud instance. The 3 GitHub projects (just to save your not needed storage) The Toolchain The Cloudant alias The Cloudant service (don't delete, if you using this service also in other applications) The Continuous Delivery service (don't delete, if you using this service also in other toolchains) The Cloud Foundry app (don't forget to delete the routes you used)","title":"Tip 06: If you can't install the dashboard"}]}